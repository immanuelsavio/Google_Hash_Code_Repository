tempfile=open('b_lovely_landscapes.txt','r')

a=tempfile.read()
print(a)
b=a.split('\n')
c=[]
for i in range(1,len(b)):
    a=b[i].split();
    c.append(a);
#print(c)
print(b[0])
c.pop()
print(c)
tagsize=[]
z=int(b[0])
#print(z)
#for i in range(1,)
picturetype=[]
for i in range(1,z+1):
    picturetype.append(c[i-1][0])
#print(picturetype)
tagsize=[]
for i in range(1,z+1):
    tagsize.append(int(c[i-1][1]))
#print(tagsize)
tag=[]
for i in range(1,z+1):
    t=[]
    for j in range(0,tagsize[i-1]):
        t.append(c[i-1][2+j])
    tag.append(t)
#print(tag)
posh=[]
posv=[]
for i in range(len(picturetype)):
    if(picturetype[i]=='H'):
        posh.append(i)
    else:
        posv.append(i)
#print(posh)
verticalsize=[]
for i in posv:
    verticalsize.append(len(tag[i]))
#print(verticalsize)
horizontalsize=[]
for i in posh:
    horizontalsize.append(len(tag[i]))
print(horizontalsize)
def bubbleSort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1] :
                arr[j], arr[j+1], posv[j],posv[j+1] = arr[j+1], arr[j],posv[j+1],pos[j]
bubbleSort(verticalsize)
#print(posv)
disimilarvertical=[]
for i in range(len(posv)):
    p=[]
    for j in range(len(posv)):
        p.append(0)
    disimilarvertical.append(p)
print(disimilarvertical)
def countv(i,j):
    counter=0
    a=tag[i]
    b=tag[j]
    for i in a:
        if i not in b:
            
            counter=counter+1
    for i in b:
        if i not in a:
            counter=counter+1
    return counter
    
for i in range(len(posv)):
    for j in range(len(posv)):
        disimilarvertical[i][j]=countv(posv[i],posv[j])
print(disimilarvertical) 
dis=disimilarvertical
slidenumber=[]
for i in posh:
    slidenumber.append(i)
pusv=posv.copy()
def findver():
    max=0
    h=0
    v=0
    for i in range(len(dis)):
        for j in range(len(dis)):
            if(dis[i][j]>max):
                h,v=i,j
    tuv=[r.pop(j) for r in dis]
    if(i>j):
        z=pusv.pop(i)
        y=pusv.pop(j)
    else:
        z=pusv.pop(i)
        y=pusv.pop(j-1)
    dis.pop(i)
    k=[]
    k.append(z)
    k.append(y)
    return k
for i in range(int(len(posv)/2)):
    slidenumber.append(findver())
print(slidenumber)
slidetag=[]
for i in posh:
    slidetag.append(tag[i])
#print(slidetag)
print(posv)
def Union(a,b):
    final=list(set(a)|set(b))
    return final
for i in range(0,int(len(posv)/2)):
    a=slidenumber[i+len(posh)][0]
    b=slidenumber[i+len(posh)][1]
   # print(a)
    #print(b)
    slidetag.append(Union(tag[a],tag[b]))
print(slidetag)
def countd1(i,j):
    counter=0
    a=slidetag[i]
    b=slidetag[j]
    for i in a:
        if i not in b:
            counter=counter+1
    return counter
def counts(i,j):
    counter=0
    a=slidetag[i]
    b=slidetag[j]
    for i in a:
        if i in b:
            counter=counter+1
    return counter
def countd2(i,j):
    counter=0
    a=slidetag[i]
    b=slidetag[j]
    for i in b:
        if i not in a:
            counter=counter+1
    return counter
scored1 = [[0 for col in range(len(slidetag))] for row in range(len(slidetag))]
scores= [[0 for col in range(len(slidetag))] for row in range(len(slidetag))]
scored2 = [[0 for col in range(len(slidetag))] for row in range(len(slidetag))]
for i in range(len(slidetag)):
    for j in range(len(slidetag)):
        scored1[i][j]=countd1(i,j)
        scores[i][j]=counts(i,j)
        scored2[i][j]=countd2(i,j)
mini = [[0 for col in range(len(slidetag))] for row in range(len(slidetag))]    
print(scored1)
print(scores)
print(scored2)

for i in range(len(slidetag)):
    for j in range(len(slidetag)):
        mini[i][j]=min(scored1[i][j],scores[i][j],scored2[i][j])
print(mini)
slide=slidenumber.copy()
order=[]
def findmax():
    max=0
    h=0
    v=0
    for i in range(len(mini)):
        for j in range(len(mini)):
           # print(mini[i][j])
            if(mini[i][j]>max):
                max=mini[i][j]
                h,v=i,j
    print(h)
    print(v)
    for k in range(len(slidenumber)):
        mini[h][k]=0
        mini[k][h]=0
    order.append(slidenumber[h])
    order.append(slidenumber[v])
    return v
l=findmax()
#print(order)
#print(mini)
def checkzero():
    for i in range(len(mini)):
        for j in range(len(mini)):
            #print(mini[i][j])
            if(mini[i][j]!=0):
                return 1
    return 0
def findm(g):
    max=0
    h=0
    v=0
    for i in range(len(mini)):
           # print(mini[i][j])
            if(mini[g][j]>max):
                max=mini[g][j]
                v=j
    for k in range(len(slidenumber)):
        mini[g][k]=0
        mini[k][g]=0
    order.append(slidenumber[v])
    return v
while(checkzero()==1):
    to=findm(l)
    l=to
print(order)
